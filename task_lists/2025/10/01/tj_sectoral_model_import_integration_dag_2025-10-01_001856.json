{
  "user_input": "Modify the TJ Sectoral Model. Add 2 new Gas Nodes 1 called 'e-kerosene import' and the other 'e-methanol import'. Add 2 new Gas Fields 1 called 'e-kerosene import' and the other 'e-methanol import'. Perform a web search/LLM call to find import terminals for kerosene and methanol into Europe by ship and yearly capacity including any information on seasonal capacities. Ensure we have the city name so we can link them to the hydrogen nodes by locating and reading the NUTS regions e-highway file in the nodes and lines folder. Create pipelines to link the kerosene import nodes to the relevant hydrogen node. Make the capacity of the pipelines match the import terminal capacities.",
  "author": "Dante",
  "tags": [
    "crud",
    "gas_nodes",
    "gas_fields",
    "web_search",
    "file_operations",
    "pipeline",
    "capacity_update"
  ],
  "date_created": "2025-10-01",
  "time_created": "00:19:43",
  "retry_policy": {
    "count": 1,
    "strategy": "fixed"
  },
  "default_llm_context": "Perform the specified operation based on the user's input and the Terajoule Model specifications.",
  "tasks": [
    {
      "task_id": 0,
      "task_name": "crud_create_gas_nodes",
      "pipeline_name": "crud_pipeline.json",
      "description": "Using crud_pipeline.json, create two Gas Nodes in the TJ Sectoral Model named 'e-kerosene import' and 'e-methanol import'.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [],
      "on_error": "abort"
    },
    {
      "task_id": 1,
      "task_name": "crud_create_gas_fields",
      "pipeline_name": "crud_pipeline.json",
      "description": "Using crud_pipeline.json, create two Gas Fields in the TJ Sectoral Model named 'e-kerosene import' and 'e-methanol import'.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [
        "crud_create_gas_nodes"
      ],
      "on_error": "abort"
    },
    {
      "task_id": 2,
      "task_name": "google_search",
      "function_name": "google_search",
      "function_args": {
        "query": "import terminals for kerosene and methanol into Europe by ship, including annual capacities, seasonal capacity information, and associated city names"
      },
      "description": "Perform a web search to find import terminals for kerosene and methanol into Europe by ship, including annual capacities, any seasonal capacity information, and associated city names.",
      "target_level": "external_data",
      "strategy_action": "read",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [],
      "on_error": "log_and_continue"
    },
    {
      "task_id": 3,
      "task_name": "find_file",
      "function_name": "find_file",
      "function_args": {
        "user_input": "NUTS regions e-highway file in the nodes and lines folder"
      },
      "description": "Locate the 'NUTS regions e-highway' file in the nodes and lines folder.",
      "target_level": "file",
      "strategy_action": "read",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [],
      "on_error": "abort"
    },
    {
      "task_id": 4,
      "task_name": "perform_file_crud",
      "function_name": "perform_file_crud",
      "function_args": {
        "user_input": "Read the located 'NUTS regions e-highway' file to obtain city names and region mapping for linking to hydrogen nodes.",
        "context": "File content needed for city name and region mapping.",
        "action": "read",
        "input_file_path": "output_of_find_file_task"
      },
      "function_kwargs": {},
      "description": "Read the located 'NUTS regions e-highway' file to obtain city names and region mapping for linking to hydrogen nodes.",
      "target_level": "file",
      "strategy_action": "read",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [
        "find_file"
      ],
      "on_error": "abort"
    },
    {
      "task_id": 5,
      "task_name": "crud_create_pipelines",
      "pipeline_name": "crud_pipeline.json",
      "description": "Using crud_pipeline.json, create pipeline object(s) to link the 'e-kerosene import' Gas Node to the relevant Hydrogen node(s).",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [0, 2, 4],
      "on_error": "abort"
    },
    {
      "task_id": 6,
      "task_name": "crud_update_pipeline_capacity",
      "pipeline_name": "crud_pipeline.json",
      "description": "Using crud_pipeline.json, update the Capacity property of the created kerosene pipeline(s) to match the identified import terminal capacities.",
      "target_level": "property",
      "strategy_action": "update",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate {entity_type} from the following list.",
      "dependencies": [
        "crud_create_pipelines",
        "google_search"
      ],
      "on_error": "abort"
    }
  ]
}