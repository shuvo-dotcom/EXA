{
  "user_input": "Generate the hydrogen demand timeseries for the TYNDP 2026 scenarios in NLz for 2040, split model nodes as required, and produce the corresponding TST workbook",
  "author": "Dante",
  "tags": [
    "hydrogen",
    "demand",
    "split",
    "tst",
    "crud"
  ],
  "date_created": "2025-10-02",
  "time_created": "21:45:16",
  "retry_policy": {
    "count": 1,
    "strategy": "fixed"
  },
  "default_llm_context": "Perform the specified operation based on the user's input and the Terajoule Model specifications.",
  "tasks": [
    {
      "task_id": 0,
      "task_name": "main_demand_processer_v2",
      "function_name": "main_demand_processer_v2",
      "description": "Generate hydrogen demand timeseries for the TYNDP 2026 scenarios in NLz for 2040.",
      "target_level": "file",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the most appropriate entity for demand timeseries generation.",
      "dependencies": [],
      "on_error": "abort"
    },
    {
      "task_id": 1,
      "task_name": "crud_pipeline.split",
      "pipeline_name": "crud_pipeline.json",
      "description": "Split NLz model nodes as required to support the hydrogen demand timeseries for 2040.",
      "target_level": "object",
      "strategy_action": "split",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the appropriate model nodes to split.",
      "dependencies": [
        "main_demand_processer_v2"
      ],
      "on_error": "log_and_continue"
    },
    {
      "task_id": 2,
      "task_name": "build_tst_workbooks",
      "function_name": "build_tst_workbooks",
      "description": "Produce the TST workbook for the hydrogen carrier using the generated TYNDP 2026 profiles.",
      "target_level": "file",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the appropriate output workbook format.",
      "dependencies": [
        "crud_pipeline.split"
      ],
      "on_error": "abort"
    }
  ]
}