{
  "user_input": "Modify the TJ Sectoral Model. Add 2 new Gas Nodes 1 called 'e-kerosene import' and the other 'e-methanol import'. Add 2 new Gas Fields 1 called 'e-kerosene import' and the other 'e-methanol import', the memberships should be the nodes created. Find out where in import terminals for kerosene and methanol are in europe and their capacity in Tj/hour. Ensure we have the city name so we can link them to the hydrogen nodes. Create pipelines to link the kerosene import nodes to the relevant hydrogen node. Make the capacity of the pipelines match the import terminal capacities.",
  "author": "Dante",
  "tags": [
    "crud",
    "gas",
    "nodes",
    "fields",
    "membership",
    "search",
    "pipeline",
    "capacity",
    "TJ Sectoral Model"
  ],
  "date_created": "2025-08-19",
  "time_created": "22:21:45",
  "retry_policy": {
    "count": 1,
    "strategy": "fixed"
  },
  "default_llm_context": "Perform the specified operations in the TJ Sectoral Model using PLEXOS CRUD pipelines. Create two Gas Nodes and two Gas Fields, link each Field to its corresponding Node, research European import terminals for kerosene and methanol (capacity in TJ/hour and city), then create pipeline objects from each import Gas Node to the relevant Hydrogen node in the identified city, and set their capacities to match terminal capacities.",
  "tasks": [
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Node object named 'e-kerosene import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the Gas class/group and create a Node object in the appropriate Gas Node category within the TJ Sectoral Model named 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Node object named 'e-methanol import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the Gas class/group and create a Node object in the appropriate Gas Node category within the TJ Sectoral Model named 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Field object named 'e-kerosene import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the Gas class/group and create a Field object in the appropriate Gas Field category within the TJ Sectoral Model named 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Field object named 'e-methanol import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select the Gas class/group and create a Field object in the appropriate Gas Field category within the TJ Sectoral Model named 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "add_membership",
      "pipeline_name": "crud_pipeline.json",
      "description": "Link the Gas Field 'e-kerosene import' as a member to the Gas Node 'e-kerosene import'.",
      "target_level": "membership",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', choose the correct parent/child membership that associates the Gas Field 'e-kerosene import' with the Gas Node 'e-kerosene import' in the TJ Sectoral Model.",
      "on_error": "abort"
    },
    {
      "task_name": "add_membership",
      "pipeline_name": "crud_pipeline.json",
      "description": "Link the Gas Field 'e-methanol import' as a member to the Gas Node 'e-methanol import'.",
      "target_level": "membership",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', choose the correct parent/child membership that associates the Gas Field 'e-methanol import' with the Gas Node 'e-methanol import' in the TJ Sectoral Model.",
      "on_error": "abort"
    },
    {
      "task_name": "google_search",
      "function_name": "google_search",
      "description": "Search for European import terminal information for kerosene, including capacity in TJ/hour and city name.",
      "target_level": "attribute",
      "strategy_action": "read",
      "entity_selection_context": "Based on the user's request: '{user_input}', retrieve external data on kerosene import terminals in Europe, returning city/location names and capacities in TJ/hour.",
      "on_error": "abort",
      "function_args": {
        "query": "Europe kerosene import terminals capacity TJ/hour city name"
      },
      "function_kwargs": {}
    },
    {
      "task_name": "google_search",
      "function_name": "google_search",
      "description": "Search for European import terminal information for methanol, including capacity in TJ/hour and city name.",
      "target_level": "attribute",
      "strategy_action": "read",
      "entity_selection_context": "Based on the user's request: '{user_input}', retrieve external data on methanol import terminals in Europe, returning city/location names and capacities in TJ/hour.",
      "on_error": "abort",
      "function_args": {
        "query": "Europe methanol import terminals capacity TJ/hour city name"
      },
      "function_kwargs": {}
    },
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Pipeline object linking the 'e-kerosene import' Gas Node to the relevant Hydrogen node in the identified city.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select or create the appropriate Gas Pipeline object and set its endpoints from Gas Node 'e-kerosene import' to the Hydrogen node corresponding to the city found in the kerosene terminal search.",
      "on_error": "abort"
    },
    {
      "task_name": "update_properties",
      "pipeline_name": "crud_pipeline.json",
      "description": "Set the capacity property of the kerosene pipeline to match the import terminal capacity (TJ/hour).",
      "target_level": "property",
      "strategy_action": "update",
      "entity_selection_context": "Based on the user's request: '{user_input}', choose the capacity-related property for the newly created kerosene pipeline object and update its value to the terminal capacity in TJ/hour.",
      "on_error": "abort"
    },
    {
      "task_name": "add_object",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a Gas Pipeline object linking the 'e-methanol import' Gas Node to the relevant Hydrogen node in the identified city.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', select or create the appropriate Gas Pipeline object and set its endpoints from Gas Node 'e-methanol import' to the Hydrogen node corresponding to the city found in the methanol terminal search.",
      "on_error": "abort"
    },
    {
      "task_name": "update_properties",
      "pipeline_name": "crud_pipeline.json",
      "description": "Set the capacity property of the methanol pipeline to match the import terminal capacity (TJ/hour).",
      "target_level": "property",
      "strategy_action": "update",
      "entity_selection_context": "Based on the user's request: '{user_input}', choose the capacity-related property for the newly created methanol pipeline object and update its value to the terminal capacity in TJ/hour.",
      "on_error": "abort"
    }
  ]
}