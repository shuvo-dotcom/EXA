{
  "user_input": "Modify the TJ Sectoral Model. Add 2 new Gas Nodes 1 called 'e-kerosene import' and the other 'e-methanol import'. Add 2 new Gas Fields 1 called 'e-kerosene import' and the other 'e-methanol import'. Perform a web search/LLM call to find import terminals for kerosene and methanol into Europe by ship and yearly capacity including any information on seasonal capacities. Ensure we have the city name so we can link them to the hydrogen nodes by locating and reading the NUTS regions e-highway link file in a folder that contains nodes and lines. Create pipelines to link the kerosene import nodes to the relevant hydrogen node. Make the capacity of the pipelines match the import terminal capacities.",
  "author": "Dante",
  "tags": [
    "crud",
    "object",
    "create",
    "gas",
    "pipelines",
    "search",
    "files",
    "sectoral-model"
  ],
  "date_created": "2025-08-22",
  "time_created": "02:24:53",
  "retry_policy": {
    "count": 1,
    "strategy": "fixed"
  },
  "default_llm_context": "Perform the specified operation based on the user's input and the Terajoule (TJ) Sectoral Model specifications. Use PLEXOS CRUD pipelines for model edits, and use functions only for external searches and file operations.",
  "tasks": [
    {
      "task_name": "create_e-kerosene_import_gas_node",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a new object named 'e-kerosene import' in the 'Gas Nodes' category within the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: 'Modify the TJ Sectoral Model and add Gas Nodes', select the 'Gas Nodes' category in the TJ Sectoral Model and create the object 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_e-methanol_import_gas_node",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a new object named 'e-methanol import' in the 'Gas Nodes' category within the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: 'Modify the TJ Sectoral Model and add Gas Nodes', select the 'Gas Nodes' category in the TJ Sectoral Model and create the object 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_e-kerosene_import_gas_field",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a new object named 'e-kerosene import' in the 'Gas Fields' category within the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: 'Modify the TJ Sectoral Model and add Gas Fields', select the 'Gas Fields' category in the TJ Sectoral Model and create the object 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_e-methanol_import_gas_field",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create a new object named 'e-methanol import' in the 'Gas Fields' category within the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: 'Modify the TJ Sectoral Model and add Gas Fields', select the 'Gas Fields' category in the TJ Sectoral Model and create the object 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "google_search_import_terminals",
      "function_name": "google_search",
      "function_args": {
        "query": "Europe kerosene (jet fuel) import terminals by ship OR chemical tanker AND (capacity OR throughput) site:eu OR site:gov OR site:org; Europe methanol import terminal capacity yearly seasonal city list"
      },
      "function_kwargs": {},
      "description": "Perform a web search to find import terminals for kerosene and methanol into Europe by ship, including yearly capacities and any information on seasonal capacities, and capture terminal city names.",
      "target_level": "attribute",
      "strategy_action": "read",
      "entity_selection_context": "Use search results to compile terminal names, cities, products (kerosene, methanol), annual capacities, and any seasonal capacity details for subsequent pipeline capacity updates.",
      "on_error": "abort"
    },
    {
      "task_name": "find_nuts_regions_e_highway_link_file",
      "function_name": "find_file",
      "function_args": {
        "user_input": "Locate the 'NUTS regions e-highway link' file in a folder that contains nodes and lines."
      },
      "function_kwargs": {},
      "description": "Locate the 'NUTS regions e-highway link' file within the project/workspace directory structure to enable city-to-hydrogen node linkage.",
      "target_level": "file",
      "strategy_action": "read",
      "entity_selection_context": "Find the best-matching file path for 'NUTS regions e-highway link' that includes node and line mappings for hydrogen nodes.",
      "on_error": "abort"
    },
    {
      "task_name": "read_city_to_hydrogen_node_linkage",
      "function_name": "perform_file_crud",
      "function_args": {
        "user_input": "Read the located 'NUTS regions e-highway link' file to extract city-to-node linkage, focusing on hydrogen nodes.",
        "context": "Use the resolved file path from the 'find_nuts_regions_e_highway_link_file' task.",
        "action": "read"
      },
      "function_kwargs": {
        "input_location": "",
        "output_location": ""
      },
      "description": "Read the NUTS regions e-highway link file to obtain the mapping from city names to hydrogen node identifiers for linkage.",
      "target_level": "file",
      "strategy_action": "read",
      "entity_selection_context": "Extract the fields needed to map import terminal cities to hydrogen node names/IDs for the TJ Sectoral Model.",
      "on_error": "abort"
    },
    {
      "task_name": "create_kerosene_import_pipelines",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create Pipeline object(s) in the 'Pipelines' category to link the 'e-kerosene import' Gas Node to the relevant Hydrogen node(s) in the TJ Sectoral Model, based on the city-to-node mapping and terminal locations.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Select the 'Pipelines' category in the TJ Sectoral Model. For each matched city from the search results and the NUTS linkage, create a pipeline from the 'e-kerosene import' Gas Node to the corresponding Hydrogen node.",
      "on_error": "abort"
    },
    {
      "task_name": "update_pipeline_capacities_from_terminals",
      "pipeline_name": "crud_pipeline.json",
      "description": "Update the 'Capacity' property of each created pipeline to match the corresponding kerosene import terminal annual capacity, applying seasonal capacity adjustments if available.",
      "target_level": "property",
      "strategy_action": "update",
      "entity_selection_context": "For each newly created pipeline object, select the 'Capacity' property and set it using the capacity values gathered by the web search, matched by city and product.",
      "on_error": "abort"
    }
  ]
}