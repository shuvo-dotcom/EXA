{
  "user_input": "Modify the TJ Sectoral Model. Add 2 new Gas Nodes 1 called 'e-kerosene import' and the other 'e-methanol import'. Add 2 new Gas Fields 1 called 'e-kerosene import' and the other 'e-methanol import'. Perform a web search/LLM call to find import terminals for kerosene and methanol in Europe and their capacity in Tj/hour. Ensure we have the city name so we can link them to the hydrogen nodes. Create pipelines to link the kerosene import nodes to the relevant hydrogen node. Make the capacity of the pipelines match the import terminal capacities.",
  "author": "Dante",
  "tags": [
    "crud",
    "gas",
    "node",
    "field",
    "pipeline",
    "llm",
    "research",
    "update",
    "TJ Sectoral Model"
  ],
  "date_created": "2025-08-20",
  "time_created": "01:16:46",
  "retry_policy": {
    "count": 1,
    "strategy": "fixed"
  },
  "default_llm_context": "Perform the specified operation based on the user's input and the Terajoule Model specifications.",
  "tasks": [
    {
      "task_name": "create_gas_node_e-kerosene_import",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create Gas Node named 'e-kerosene import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', create a Gas Node object in the 'TJ Sectoral Model' with the exact name 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_gas_node_e-methanol_import",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create Gas Node named 'e-methanol import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', create a Gas Node object in the 'TJ Sectoral Model' with the exact name 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_gas_field_e-kerosene_import",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create Gas Field named 'e-kerosene import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', create a Gas Field object in the 'TJ Sectoral Model' with the exact name 'e-kerosene import'.",
      "on_error": "abort"
    },
    {
      "task_name": "create_gas_field_e-methanol_import",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create Gas Field named 'e-methanol import' in the TJ Sectoral Model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Based on the user's request: '{user_input}', create a Gas Field object in the 'TJ Sectoral Model' with the exact name 'e-methanol import'.",
      "on_error": "abort"
    },
    {
      "task_name": "research_import_terminals_kerosene_and_methanol_europe",
      "function_name": "run_open_ai_ns",
      "description": "Perform an LLM-backed web research call to identify European kerosene and methanol import terminals, capturing terminal city names and capacities in TJ/hour.",
      "target_level": "attribute",
      "strategy_action": "read",
      "entity_selection_context": "Research output must be a JSON list with items containing: fuel ('kerosene' or 'methanol'), terminal_name, city, country, capacity_TJ_per_hour, and sources. Use city names to later map to existing Hydrogen node(s) in the TJ Sectoral Model.",
      "on_error": "abort"
    },
    {
      "task_name": "create_pipelines_linking_e-kerosene_import_to_hydrogen_nodes",
      "pipeline_name": "crud_pipeline.json",
      "description": "Create pipeline object(s) to link the 'e-kerosene import' Gas Node to the relevant hydrogen node(s) in the model.",
      "target_level": "object",
      "strategy_action": "create",
      "entity_selection_context": "Using the research results (terminal cities), select existing Hydrogen Node(s) in the 'TJ Sectoral Model' with matching city names. For each match, create a Gas Pipeline object connecting 'e-kerosene import' to the corresponding Hydrogen Node.",
      "on_error": "abort"
    },
    {
      "task_name": "update_capacity_of_kerosene_import_pipelines",
      "pipeline_name": "crud_pipeline.json",
      "description": "Update the capacity property of the kerosene import pipeline object(s) to match the researched import terminal capacities (in TJ/hour).",
      "target_level": "property",
      "strategy_action": "update",
      "entity_selection_context": "For each created Gas Pipeline connecting 'e-kerosene import' to a Hydrogen Node, set the Capacity property to the capacity_TJ_per_hour value from the research corresponding to that city.",
      "on_error": "log_and_continue"
    }
  ]
}