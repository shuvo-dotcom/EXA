{
    "functions": {
                "PLEXOS_API_Functions": {
                                        "owner": "Emil",
                                        "description": "Functions for interacting with PLEXOS models. Contains the CRUD operation for manipulation of Classes, Object, Collection, Properties and Attributes used in the PLEXOS API Pipelines",
                                        "load_plexos_xml": {
                                            "name": "load_plexos_xml",
                                            "module": "pef",
                                            "description": "Loads a PLEXOS model from a given file path.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_active_classes": {
                                            "name": "get_active_classes",
                                            "module": "pef",
                                            "description": "Retrieves all active classes in the PLEXOS model.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "close_model": {
                                            "name": "close_model",
                                            "module": "pef",
                                            "description": "Closes the active PLEXOS database connection.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "get_plexos_item": {
                                            "name": "get_plexos_item",
                                            "module": "pef",
                                            "description": "LLM-driven function to choose a PLEXOS item.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_plexos_table_and_llm_pick_item_id": {
                                            "name": "get_plexos_table_and_llm_pick_item_id",
                                            "module": "rs",
                                            "description": "LLM-driven function to choose a PLEXOS item via a wrapper.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "perform_crud_operation": {
                                            "name": "perform_crud_operation",
                                            "module": "pef",
                                            "description": "Performs a CRUD operation on a PLEXOS item.",
                                        "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "choose_membership_name": {
                                            "name": "choose_membership_name",
                                            "module": "rs",
                                        "description": "LLM determines the membership for the operation.",
                                        "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_membership_name_clone": {
                                            "name": "choose_membership_name_clone",
                                            "module": "rs",
                                            "description": "LLM determines the membership for the operation (clone).",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_parent_and_child_memberships": {
                                                "name": "get_parent_and_child_memberships",
                                            "module": "rs",
                                            "description": "LLM determines the parent and child memberships for a new membership.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_object_collections": {
                                            "module": "pef",
                                            "description": "Retrieves all collections an object belongs to.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_categories": {
                                            "module": "pef",
                                            "description": "Retrieves all categories for a given class ID.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_objects_in_category": {
                                            "module": "pef",
                                            "description": "Retrieves all objects within a specific category and class.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_source_item": {
                                            "module": "rs",
                                            "description": "High-level LLM call to choose an item from a set of options.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_object_name_structure": {
                                            "module": "rs",
                                            "description": "LLM selects a structure for naming an object based on user input.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_destination_item": {
                                            "module": "rs",
                                            "description": "High-level LLM call to choose an item from a set of options.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "add_object": {
                                            "module": "pdcm",
                                            "description": "Adds a new object to the PLEXOS model.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "generate_item_name": {
                                            "module": "rs",
                                            "description": "Generates a name for a new item based on user input.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "add_category": {
                                            "module": "pdcm",
                                            "description": "Adds a new category to the PLEXOS model.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "add_membership": {
                                            "module": "pdcm",
                                            "description": "Creates a membership relationship between two objects.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "update_properties_with_grouped_llm": {
                                            "module": "rs",
                                            "description": "Updates properties for a set of objects based on LLM suggestions.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "update_properties": {
                                            "module": "rs",
                                            "description": "Adds or updates properties for an object.",
                                            "is_write_operation": true,
                                            "agentic": false
                                        },
                                        "choose_object_subset": {
                                            "module": "rs",
                                            "description": "LLM selects a subset of objects from a list based on user input.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_collection_subset": {
                                            "module": "rs",
                                            "description": "LLM selects a subset of collections from a list based on user input.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_collection_subset_complex": {
                                            "module": "rs",
                                            "description": "LLM selects a subset of collections from a list based on user input, with additional complexity for operation type and object selection type.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_property_subset": {
                                                "module": "rs",
                                                "description": "LLM selects a subset of properties from a list.",
                                                "is_write_operation": false,
                                                "agentic": false
                                        },
                                        "get_collections": {
                                            "module": "pef",
                                            "description": "Gets all collections an object belongs to.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "choose_new_membership": {
                                            "module": "pef",
                                            "description": "Determines the parent/child for a new membership.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        },
                                        "get_properties_table_to_dict": {
                                            "module": "pef",
                                            "description": "Reads a properties table into a dictionary.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        }, 
                                        "choose_attributes_subset": {                        
                                            "name": "choose_attributes_subset",
                                            "module": "rs",
                                            "description": "Retrieves attributes for a given object.",
                                            "is_write_operation": false,
                                            "agentic": false
                                        }
                                        },
                "PLEXOS_manager":      {
                                        "owner": "Emil",
                                        "description": "High-level functions for managing PLEXOS models, including loading, saving, and closing models.",
                                        "distill_model": {
                                            "name": "distill_model",
                                            "module": "pm",
                                            "description": "Distills a PLEXOS model reducing the scope of the model (geographic, energy carriers, categories etc.",
                                            "is_write_operation": false,
                                            "agentic": true,
                                            "args": {
                                                "plexos_model_location": "str"
                                            }
                                        },
                                        "transfer_plexos_model": {
                                            "name": "transfer_plexos_model",
                                            "module": "pm",
                                            "description": "Transfers a PLEXOS model to a new location, updating all internal file paths accordingly.",
                                            "is_write_operation": true,
                                            "agentic": true,
                                            "args": {
                                                "plexos_model_location": "str",
                                                "new_model_location": "str"
                                            }
                                        }
                                        },  
                "File_operations":      {
                                        "owner": "Shared",
                                        "description": "Functions for file operations, including reading, writing, and modifying files.",
                                        "modify_data_file": {
                                            "name": "modify_data_file",
                                            "module": "code_interpreter",
                                            "description": "A pipeline create to perform all 3 actions in sequence. Open, Modifies and Saves data as a new file. Do information is returned to user, on succes/failure status",
                                            "is_write_operation": true,
                                            "agentic": true,
                                            "args": {
                                                "plexos_model_location": "return the path as string without the file name",
                                                    "input_file_path": "str",
                                                    "user_input": "str",
                                                    "output_file_path": "str"
                                                }, 
                                        "kwargs": {}
                                        },
                                        "find_file": {
                                            "name": "find_file",
                                            "module": "aiff",
                                            "description": "Searches the file structure based on the user input and returns the location of the best aligned file.",
                                            "is_write_operation": false,
                                            "args": {
                                                "user_input": "str"
                                            },
                                            "agentic": true
                                        },
                                        "file_crud_operation": {
                                            "name": "perform_file_crud",
                                            "module": "file_CRUD",
                                            "description": "Performs create, read, update, delete operations on files with AI assistance. Do not try and estimate the file name or location you will likely get it wrong 100% of the time and break the workflow",
                                            "is_write_operation": true,
                                            "agentic": true,
                                            "args": {
                                                "user_input": "str",
                                                "context": "str",
                                                "action":  "create | read | update |delete",
                                                "input_file_path": "str - FULL FILE PATH INCLUDING FILE NAME!"
                                            },
                                            "kwargs": {
                                                "output_file_path": "str"
                                            }
                                        }
                                        },
                "Pipeline_executor":    {
                                        "owner": "Emil",
                                        "description": "Functions for executing and managing pipelines, should not be called by agents.",
                                        "resolve_arguments": {
                                            "name": "resolve_arguments",
                                            "module": "rs",
                                            "description": "Resolves function arguments based on the current context.",
                                            "is_write_operation": false,
                                            "agentic": true
                                        },
                                        "prose_task_summary": {
                                            "name": "prose_task_summary",
                                            "module": "rs",
                                            "description": "Summarizes the task outputs into a prose format.",
                                            "is_write_operation": false,
                                            "agentic": true
                                        }
                                        }, 
                "Demand_Functions":     {
                                        "owner": "Emil",
                                        "description": "Functions related to demand forecasting and analysis.",
                                        "main_demand_processer_v2": {
                                            "name": "main_demand_processer_v2",
                                            "module": "dp",
                                            "description": "Decomposes annual energy demand figures into hourly, daily or monthly profiles. This function also ",
                                            "agentic": true,
                                            "args": {
                                                "user_input": "str"
                                            },
                                            "is_write_operation": true
                                        }, 
                                        "build_tst_workbooks": {
                                            "name": "build_tst_workbooks",
                                            "module": "tst",
                                            "description": "Export the hourly demand profiles for the TYNDP 2026 scenario into the standard format for the TYNDP study team.",
                                            "agentic": true,
                                            "args": {
                                                    "carrier": "str"
                                                    },
                                            "is_write_operation": true
                                        }
                                        }, 
                "AI_Calls":             {
                                        "owner": "Shared",
                                            "description": "Functions for making calls to AI models.",
                                            "LLM_Call": {
                                                                            "name": "run_open_ai_ns",
                                                                            "module": "oaic",
                                                                            "description": "Calls the OpenAI LLM model with the given prompt and context.",
                                                                            "agentic": true,
                                                                            "args": {
                                                                                "prompt": "str",
                                                                                "context": "str",
                                                                                "model": "str"
                                                                            },
                                                                            "is_write_operation": false
                                            },
                                            "google_search": {
                                                                            "name": "google_search",
                                                                            "module": "gemini",
                                                                            "description": "Performs a Google search with the given query.",
                                                                            "agentic": true,
                                                                            "args": {
                                                                                "query": "str"
                                                                            },
                                                                            "is_write_operation": false
                                                                        }, 
                                            "Generic_AI_Call": {
                                                                            "name": "generic_ai_call",
                                                                            "module": "rs",
                                                                            "description": "Makes a generic call to an AI model. Will extract full context from DAG and respond in a structured format as provided in args.",
                                                                            "agentic": true,
                                                                            "args": {
                                                                                "user_input": "str",
                                                                                "context": "dict",
                                                                                "response_format": "dict"
                                                                            },
                                                                            "is_write_operation": false
                                                                        }
                                        }, 
                "Analysis":             {
                                        }, 
                "Copywriting":          {
                                        "write_linked_in_post": {
                                                                "owner": "lola",
                                                                "name": "linked_in_post",
                                                                "module": "cw",
                                                                "description": "Generates a LinkedIn post based on user input, tone, length, audience, and specific notes.",
                                                                "agentic": true,
                                                                "args": {
                                                                        "user_input": "str"
                                                                        },
                                                                "kwargs": {
                                                                    "tone": "str - e.g., professional, casual, humorous",
                                                                    "length": "str - e.g., short (100-200 words), medium (200-500 words), long (500+ words)",
                                                                    "audience": "str - e.g., general public, industry professionals, academics",
                                                                    "notes": "str - any specific points or data to include"
                                                                },
                                                "is_write_operation": true
                                            },
                                        "write_website_copy": {
                                            "owner": "lola",
                                            "name": "website_copy",
                                            "module": "cw",
                                            "description": "Generates website copy based on user input, tone, length, audience, and specific notes.",
                                            "agentic": true,
                                            "args": {
                                                    "user_input": "str"
                                                    },
                                            "kwargs": {
                                                "tone": "str - e.g., professional, casual, humorous",
                                                "length": "str - e.g., short (100-200 words), medium (200-500 words), long (500+ words)",
                                                "audience": "str - e.g., general public, industry professionals, academics",
                                                "notes": "str - any specific points or data to include"
                                            },
                                            "is_write_operation": true
                                        }, 
                                        "write_blog_post": {
                                            "owner": "lola",
                                            "name": "blog_post",
                                            "module": "cw",
                                            "description": "Generates a blog post based on user input, tone, length, audience, and specific notes.",
                                            "agentic": true,
                                            "args": {
                                                    "user_input": "str"
                                                    },
                                            "kwargs": {
                                                "tone": "str - e.g., professional, casual, humorous",
                                                "length": "str - e.g., short (100-200 words), medium (200-500 words), long (500+ words)",
                                                "audience": "str - e.g., general public, industry professionals, academics",
                                                "notes": "str - any specific points or data to include"
                                            },
                                            "is_write_operation": true
                                        }, 
                                        "write_grant_proposal_copy": {
                                            "owner": "lola",
                                            "name": "grant_proposal",
                                            "module": "cw",
                                            "description": "Generates grant proposal copy based on user input, tone, length, audience, and specific notes.",
                                            "agentic": true,
                                            "args": {
                                                    "user_input": "str"
                                                    },
                                            "kwargs": {
                                                "tone": "str - e.g., professional, formal, persuasive",
                                                "length": "str - e.g., short (1-2 pages), medium (3-5 pages), long (5+ pages)",
                                                "audience": "str - e.g., funding agencies, academic committees, industry sponsors",
                                                "notes": "str - any specific points or data to include"
                                            },
                                            "is_write_operation": true
                                        }, 
                                        "generate_prompt_sheet": {
                                            "owner": "lola",
                                            "name": "prompt_sheet",
                                            "module": "ps",
                                            "description": "A prompt sheet create the strucutre for a long form report creating the requirement for web searches, RAG, model data extraction in preperation for report drafting.",
                                            "agentic": true,
                                            "args": {
                                                    "user_input": "str"
                                                    },
                                            "kwargs": {
                                                "tone": "str - e.g., professional, casual, humorous",
                                                "length": "str - e.g., short (100-200 words), medium (200-500 words), long (500+ words)",
                                                "audience": "str - e.g., general public, industry professionals, academics",
                                                "notes": "str - any specific points or data to include"
                                            },
                                            "is_write_operation": true
                                        }, 
                                        "write_report": {
                                            "owner": "lola",
                                            "name": "report",
                                            "module": "cw",
                                            "description": "Generates a detailed report based on user input, tone, length, audience, and specific notes.",
                                            "agentic": true,
                                            "args": {
                                                    "user_input": "str"
                                                    },
                                            "kwargs": {
                                                "prompt_sheet": "str - the prompt sheet to use as a structure for the report",
                                                "tone": "str - e.g., professional, formal, analytical",
                                                "length": "str - e.g., short (2-5 pages), medium (5-10 pages), long (10+ pages)",
                                                "audience": "str - e.g., executives, technical teams, general public",
                                                "notes": "str - any specific points or data to include"
                                            },
                                            "is_write_operation": true
                                        }

                                        },
                "Virtual Assistant":    {"check_email_and_calendar":{
                                                                    "owner": "nova",
                                                                    "name": "check_email_and_calendar",
                                                                    "module": "va",
                                                                    "description": "Checks email and calendar for new messages and upcoming events.",
                                                                    "agentic": true,
                                                                    "args": {
                                                                            "user_input": "str"
                                                                            },
                                                                    "is_write_operation": false
                                                                    }, 
                                        "check_meeting_minutes":    {
                                        "owner": "nova",
                                        "name": "check_meeting_minutes",
                                        "module": "va",
                                        "description": "Checks meeting minutes for action items and follow-ups.",
                                        "agentic": true,
                                        "args": {
                                                "user_input": "str"
                                                },
                                        "is_write_operation": false  
                                                                    }
                                        }
                }
}