{
"functions": [
                {
                "load_plexos_xml": {
                    "module": "pef",
                    "description": "Loads a PLEXOS model from a given file path.",
                    "inputs": [
                    {"name": "file_name", "type": "str", "source": "var"},
                    {"name": "new_copy", "type": "bool", "source": "var", "default": false}
                    ],
                    "outputs": [
                    {"name": "result", "type": "DBConn", "semantic": "db_handle"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "db"]
                },

                "get_active_classes": {
                    "module": "pef",
                    "description": "Retrieves all active classes in the PLEXOS model.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[dict]", "semantic": "class_list"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "classes"]
                },

                "close_model": {
                    "module": "pef",
                    "description": "Closes the active PLEXOS database connection.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"}
                    ],
                    "outputs": [],
                    "side_effect": true,
                    "categories": ["write", "db"]
                },

                "get_plexos_item": {
                    "module": "pef",
                    "description": "LLM‑driven helper to pick a PLEXOS item.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "str", "semantic": "chosen_item"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "get_plexos_table_and_llm_pick_item_id": {
                    "module": "rs",
                    "description": "LLM‑wrapper to pick a PLEXOS item and return its ID.",
                    "inputs": [
                    {"name": "table", "type": "str", "source": "var"},
                    {"name": "prompt", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "int", "semantic": "item_id"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "perform_crud_operation": {
                    "module": "pef",
                    "description": "Performs a CRUD operation on a PLEXOS item.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "operation", "type": "str", "source": "var"},
                    {"name": "table", "type": "str", "source": "var"},
                    {"name": "payload", "type": "dict", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "Any", "semantic": "crud_result"}
                    ],
                    "side_effect": true,
                    "categories": ["write", "db"]
                },

                "get_object_collections": {
                    "module": "pef",
                    "description": "Retrieves all collections an object belongs to.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "object_name", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "collection_names"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "collections"]
                },

                "get_properties_table_to_dict": {
                    "module": "pef",
                    "description": "Retrieves all properties for a given object (dict form).",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "object_name", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "dict", "semantic": "property_dict"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "properties"]
                },

                "get_object_memberships": {
                    "module": "pef",
                    "description": "Retrieves all memberships for a given object.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "object_name", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[dict]", "semantic": "memberships"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "memberships"]
                },

                "get_categories": {
                    "module": "pef",
                    "description": "Retrieves all categories for a given class ID.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "nClassId", "type": "int", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "category_names"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "categories"]
                },

                "get_objects_in_category": {
                    "module": "pef",
                    "description": "Retrieves all objects within a specific category.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "nClassId", "type": "int", "source": "var"},
                    {"name": "strCategory", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "object_names"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "objects"]
                },

                "choose_source_item": {
                    "module": "rs",
                    "description": "LLM selects a source item from options.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "str", "semantic": "chosen_item"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "choose_object_name_structure": {
                    "module": "rs",
                    "description": "LLM selects a naming structure for an object.",
                    "inputs": [
                    {"name": "class_name", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "str", "semantic": "name_template"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "choose_destination_item": {
                    "module": "rs",
                    "description": "LLM selects a destination item from options.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "str", "semantic": "chosen_item"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "add_object": {
                    "module": "pdcm",
                    "description": "Adds a new object to the PLEXOS model.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "nClassId", "type": "int", "source": "var"},
                    {"name": "strCategory", "type": "str", "source": "var"},
                    {"name": "object_dict", "type": "dict", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "object_names"}
                    ],
                    "side_effect": true,
                    "categories": ["write", "objects"]
                },

                "generate_item_name": {
                    "module": "rs",
                    "description": "Generates a name for a new item based on user input.",
                    "inputs": [
                    {"name": "prompt", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "str", "semantic": "generated_name"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "add_category": {
                    "module": "pdcm",
                    "description": "Adds a new category to the PLEXOS model.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "class_id", "type": "int", "source": "var"},
                    {"name": "categories", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "category_names"}
                    ],
                    "side_effect": true,
                    "categories": ["write", "categories"]
                },

                "add_membership": {
                    "module": "pdcm",
                    "description": "Creates a membership relationship between two objects.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "parent_id", "type": "int", "source": "var"},
                    {"name": "child_id", "type": "int", "source": "var"}
                    ],
                    "outputs": [],
                    "side_effect": true,
                    "categories": ["write", "memberships"]
                },

                "update_properties_with_grouped_llm": {
                    "module": "pef",
                    "description": "Adds or updates properties for an object via LLM grouping.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "object_name", "type": "str", "source": "var"},
                    {"name": "properties", "type": "dict", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "Any", "semantic": "update_result"}
                    ],
                    "side_effect": true,
                    "categories": ["write", "properties", "llm"]
                },

                "choose_object_subset": {
                    "module": "rs",
                    "description": "LLM selects a subset of objects from a list.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "object_subset"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "choose_collection_subset": {
                    "module": "rs",
                    "description": "LLM selects a subset of collections from a list.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "collection_subset"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "choose_property_subset": {
                    "module": "rs",
                    "description": "LLM selects a subset of properties from a list.",
                    "inputs": [
                    {"name": "options", "type": "list[str]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "property_subset"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                },

                "get_collections": {
                    "module": "pef",
                    "description": "Gets all collections an object belongs to.",
                    "inputs": [
                    {"name": "db", "type": "DBConn", "source": "context"},
                    {"name": "object_name", "type": "str", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "list[str]", "semantic": "collection_names"}
                    ],
                    "side_effect": false,
                    "categories": ["read", "collections"]
                },

                "choose_new_membership": {
                    "module": "pef",
                    "description": "LLM determines parent/child for a new membership.",
                    "inputs": [
                    {"name": "candidate_parents", "type": "list[int]", "source": "var"},
                    {"name": "candidate_children", "type": "list[int]", "source": "var"}
                    ],
                    "outputs": [
                    {"name": "result", "type": "dict", "semantic": "membership_pair"}
                    ],
                    "side_effect": false,
                    "categories": ["llm", "read"]
                }
                }

    ]
}
